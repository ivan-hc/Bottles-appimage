name: Bottles Appimage
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: "0 15 2 * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: build
      if: always()
      run: |
        sudo apt update && sudo apt install desktop-file-utils
        sudo sysctl -w kernel.apparmor_restrict_unprivileged_unconfined=0
        sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

        # CONTY APPIMAGE
        #APP=bottles
        #wget -q https://raw.githubusercontent.com/ivan-hc/Steam-appimage/master/create-conty.sh
        #wget -q https://raw.githubusercontent.com/ivan-hc/Steam-appimage/master/conty-start.sh
        #wget -q https://github.com/ivan-hc/Steam-appimage/releases/download/utils/utils_dwarfs.tar.gz
        #chmod +x create-arch-bootstrap.sh create-conty.sh "$APP"-conty-builder.sh
        #sudo ./create-arch-bootstrap.sh && ./create-conty.sh
        #mkdir -p tmp/"$APP".AppDir
        #mv ./conty.sh tmp/"$APP".AppDir/ || exit 1
        #./"$APP"-conty-builder.sh

        # JUNEST "ARCHIMAGE"
        chmod a+x ./bottles-junest.sh
        ./bottles-junest.sh

        mkdir dist
        mv *AppImage* dist/

    - name: Check version file
      run: |
       cat ./version
       echo "APP_VERSION=$(cat ./version)" >> "${GITHUB_ENV}"
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: AppImage
        path: 'dist'
        
    - name: Upload version file
      uses: actions/upload-artifact@v4.4.3
      with:
       name: version
       path: ./version
        
  release:
      needs: [build]
      permissions: write-all
      runs-on: ubuntu-latest

      steps:
        - uses: actions/download-artifact@v4.1.8
          with:
            name: AppImage
        - uses: actions/download-artifact@v4.1.8
          with:
            name: version

        - name: Read version
          run: |
            cat version
            export VERSION="$(<version)"
            echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"
    
        #Version Release
        - name: Del Previous Release
          run: |
            gh release delete "${APP_VERSION}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag  -y
          env:
            GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          continue-on-error: true
        - name: Continuous Releaser
          uses: softprops/action-gh-release@v2
          with:
            name: "${{ env.APP_VERSION}}"
            tag_name: "${{ env.APP_VERSION}}"
            prerelease: false
            draft: false
            generate_release_notes: false
            make_latest: true
            files: |
              *.AppImage*
          continue-on-error: false

        #Snapshot Release
        - name: Get Date
          run: |
            SNAPSHOT_TAG="$(date --utc +'%Y%m%d-%H%M%S')"
            echo SNAPSHOT_TAG="${SNAPSHOT_TAG}" >> "${GITHUB_ENV}"
          continue-on-error: false
        - name: Snapshot Releaser
          uses: softprops/action-gh-release@v2
          with:
            name: "Snapshot ${{ env.APP_VERSION}}"
            tag_name: "${{ env.SNAPSHOT_TAG}}"
            prerelease: false
            draft: false
            generate_release_notes: false
            make_latest: false
            files: |
              *.AppImage*
          continue-on-error: false
